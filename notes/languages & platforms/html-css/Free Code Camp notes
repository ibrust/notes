-use only 1 <h1> tag per page 

-img tags should have the alt attribute specifying a description. this is used by screen readers 

    <img src="https://img.jpg" alt="a picture of a dog">


-remember you can embed anchor tags inside text like this: 
    <p>Click here to view more 
        <a href="https://freedogphotoapp.com" target="_blank">dog photos</a>    // target="_blank" opens the link in a new tab 
        .                                                                       // I believe p reduces whitespace to 1 space...
    </p>


-you can make images links by wrapping them with anchor tags: 
    <a href=https://freedogphotoapp.com>
        <img src="https://cdn.freecodecamp.org/curriculum/dog-app/relaxing-dog.jpg" alt="A dog lying on its back.">
    </a>


-figures typically associate an image and a caption:
    <figure>
        <img src="https://cdn.freecodecamp.org/curriculum/dog-app/bone.jpg" alt="A dog bone.">
        <figcaption>Dogs love bones.</figcaption>
    </figure>

-remember input elements are single-tag 
-radio buttons can be a bit weird - you place the text or label for them separately
-to make it so selecting one button deselects the other give them the same name: 

    <label><input type="radio" id="option1" name="options" value="option1"> Option 1</label>            // you can set value & id the same apparently 
    <label><input type="radio" id="option2" name="options" value="option2"> Option 2</label>            // remember name/value pairs are sent with the form 


-the fieldset tag is used to group related form elements. it draws a box around them. 
-the legend element can be add text to the fieldset's box to describe the elements within: 

    <fieldset>
        <legend>Is your dog an indoor or outdoor dog?</legend>
        <label><input id="indoor" type="radio" name="indoor-outdoor" value="indoor"> Indoor</label>
        <label><input id="outdoor" type="radio" name="indoor-outdoor" value="outdoor"> Outdoor</label>
    </fieldset>


-we used auto margins to center a view that took up only 80% of the screen: 
    main {
        width: 80%;
        margin-left: auto;
        margin-right: auto;
        background-color: burlywood;
    }

-inline-block elements only take up the width of their content. use width properties to spread them out if needed 

-apparently whitespace in between p elements in the HTML will cause space to appear in the document itself. this includes newlines

-it's often useful to combine max-width and % widths so that the elements don't get too far apart on very large screens: 

    div {
        width: 80%;
        max-width: 500px;
    }

-here's some code to modify the color of anchor links at various times: 

    a {
        color: black;
    }
    a:visited {
        color: grey;
    } 
    a:hover {
        color: brown;
    } 
    a:active {              // while the link is being clicked 
        color: white;
    }

-you can also use negative margins to adjust the position of specific elements, this is sometimes useful: 

    img {
        martin-top: -25px;
    }

-examples of linear gradient: 

    linear-gradient(gradientDirection, color1, color2, ... )            // syntax - linear gradient can take more than just 2 colors

    .colorstrip {
        background: linear-gradient(90deg, rgb(255, 0, 0), rgb(0, 255, 0), rgb(0, 0, 255));
    }
    .colorstrip2 {
        background: linear-gradient(90deg, red 90%, black);         // the percentage adjusts where the gradient boundaries are placed along the line 
    }

-examples of box-shadow: 

    box-shadow: offsetX offsetY blurRadius? spreadRadius? color;          // syntax 

    box-shadow: 5px 5px 5px 5px blue;

